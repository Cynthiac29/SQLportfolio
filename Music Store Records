# For this project, I downloaded data from a digital media store and I performed analytics on the data using SQL.

--Show Customers (their full names, customer ID, and country) who are not in the US
SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE country != 'USA';

--Show only the Customers from Brazil.
SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE country = 'Brazil';

--Find the Invoices of customers who are from Brazil. 
SELECT FirstName, LastName, InvoiceId, InvoiceDate, BillingCountry
FROM customers cust
JOIN invoices inv
ON cust.CustomerId = inv.CustomerId
WHERE BillingCountry = 'Brazil';

--Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title
FROM employees
WHERE Title = 'Sales Support Agent';

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM invoices;

--Provide a query that shows the invoices associated with each sales agent. 
SELECT emp.FirstName, emp.LastName, inv.InvoiceId
FROM employees emp
JOIN customers cust
ON emp.EmployeeId = cust.SupportRepId
JOIN invoices inv
ON cust.CustomerId = inv.CustomerId;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT inv.total, cust.FirstName, cust.LastName, cust.Country, emp.FirstName AS 'Sales Agent', emp.LastName AS 'Sales Agent'
FROM invoices inv
JOIN customers cust
ON inv.CustomerId = cust.CustomerId
JOIN employees emp
ON cust.SupportRepId = emp.EmployeeId;

--How many Invoices were there in 2009?
SELECT count(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--What are the total sales for 2009?
SELECT sum(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--Write a query that includes the purchased track name with each invoice line ID
SELECT Tracks.Name, Invoice_items.InvoiceId
FROM tracks
JOIN invoice_items
ON tracks.TrackId= invoice_items.TrackId

--Write a query that includes the purchased track name AND artist name with each invoice line ID
SELECT tracks.name AS 'Track', artists.name AS 'Artist', invoice_items.InvoiceId
FROM invoice_items
JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
JOIN albums
ON tracks.AlbumId= albums.AlbumId
JOIN artists
ON albums.ArtistId = artists.ArtistId;

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name AS Track, al.title AS Album, m.name as Media, g.Name as Genre
FROM tracks t
JOIN albums al
ON t.AlbumId= al.AlbumId
JOIN media_types m
ON t.MediaTypeId= m.MediaTypeId
JOIN genres g
ON t.GenreId = g.GenreId;

--Show the total sales made by each sales agent.
SELECT sum(Total), employees.FirstName, employees.LastName
FROM invoices
JOIN customers
ON invoices.CustomerId= customers.CustomerId
JOIN employees
ON customers.SupportRepId= employees.EmployeeId
GROUP BY EmployeeId;

--Which sales agent made the most dollars in sales in 2009?
SELECT sum(Total), employees.FirstName, employees.LastName
FROM invoices
JOIN customers
ON invoices.CustomerId= customers.CustomerId
JOIN employees
ON customers.SupportRepId= employees.EmployeeId
WHERE InvoiceDate LIKE '%2009%'
GROUP BY EmployeeId
ORDER BY sum(Total) desc
LIMIT 1;

--Which genre made the most money?
SELECT genres.name, sum(total)
FROM genres
JOIN tracks
ON genres.GenreId= tracks.GenreId
JOIN invoice_items
ON tracks.TrackId= invoice_items.TrackId
JOIN invoices
ON invoice_items.InvoiceId = invoices.InvoiceId
GROUP BY genres.GenreId
ORDER BY sum(total) desc
LIMIT 1;
